// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SafeZone.API.Data;

#nullable disable

namespace SafeZone.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("KitEmergencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalEstoque")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("KitsEmergencia");
                });

            modelBuilder.Entity("SafeZone.API.Models.Alerta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NivelGravidade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ZonaDeRiscoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ZonaDeRiscoId");

                    b.ToTable("Alertas");
                });

            modelBuilder.Entity("SafeZone.API.Models.Morador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prioridade")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ZonaDeRiscoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ZonaDeRiscoId");

                    b.ToTable("Moradores");
                });

            modelBuilder.Entity("SafeZone.API.Models.ZonaDeRisco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Coordenadas")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoEvento")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ZonasDeRisco");
                });

            modelBuilder.Entity("SafeZone.API.Models.Alerta", b =>
                {
                    b.HasOne("SafeZone.API.Models.ZonaDeRisco", "ZonaDeRisco")
                        .WithMany("Alertas")
                        .HasForeignKey("ZonaDeRiscoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZonaDeRisco");
                });

            modelBuilder.Entity("SafeZone.API.Models.Morador", b =>
                {
                    b.HasOne("SafeZone.API.Models.ZonaDeRisco", "ZonaDeRisco")
                        .WithMany("Moradores")
                        .HasForeignKey("ZonaDeRiscoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ZonaDeRisco");
                });

            modelBuilder.Entity("SafeZone.API.Models.ZonaDeRisco", b =>
                {
                    b.Navigation("Alertas");

                    b.Navigation("Moradores");
                });
#pragma warning restore 612, 618
        }
    }
}
